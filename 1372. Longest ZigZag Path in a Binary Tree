Problem Link : https://leetcode.com/problems/longest-zigzag-path-in-a-binary-tree/
--------------------------------------------------------------------------------
Complexity : Time -O(N), Memory-O(N), TimeTaken-<30min
--------------------------------------------------------------------------------
Logic :
So at any give node, it will contribute to the right part of left node and
left part of right node because of ZigZag prop.

class Solution {
    int max=0;
    public int longestZigZag(TreeNode root) {
        traverse(root);
        return max-1;
    }
    private int[] traverse(TreeNode root){
        if(root==null)return new int[]{0,0};
        
        int[] left=traverse(root.left);
        int[] right=traverse(root.right);
        int[] res=new int[]{1+left[1], 1+right[0]};
        max=Math.max(max, res[0]);
        max=Math.max(max, res[1]);
        return res;
    }
}
