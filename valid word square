Problem Link : https://leetcode.com/problems/valid-word-square/
----------------------------------------------------------------------------------------------------------------------
Complexity : Memory - O(Max(words.size, words.get(i).length)), Time - O(N^2), TimeTaken - 3-4hr
----------------------------------------------------------------------------------------------------------------------

class Solution {
    public boolean validWordSquare(List<String> words) {
        List<Character> row, col;
        // Collections.sort(words, (a, b) -> b.length() - a.length());
        for(int i=0;i<words.size();i++){
            row=new ArrayList();
            col=new ArrayList();
            for(int j=i;j<words.get(i).length();j++){
                row.add(words.get(i).charAt(j));
            }
            for(int j=i;j<words.size();j++){
                if(i<words.get(j).length())
                    col.add(words.get(j).charAt(i));
            }
            if(col.size()!=row.size() || !comp(col, row))
                return false;
        }
        return true;
    }
    private boolean comp(List<Character> list1, List<Character> list2){
        list1.retainAll(list2);
        return list1.size()==list2.size();
    }
}
