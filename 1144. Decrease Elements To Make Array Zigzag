Problem Link : https://leetcode.com/problems/decrease-elements-to-make-array-zigzag/
-------------------------------------------------------------------------------------
Complexity : Time-O(N), Memory-O(1), TimeTaken-<2weeks :)
-------------------------------------------------------------------------------------
Logic : 
Its straightforward we just have to minimize the middle value by the (min of both side + 1).

class Solution {
    public int movesToMakeZigzag(int[] nums) {
        int oddMoves=0, evenMoves=0;
        int n=nums.length;
        if(n==1)    return 0;
        for(int i=0;i<n;i+=2){
            if(i==0){
                if(nums[i]>=nums[i+1])
                    evenMoves+=(nums[i]-nums[i+1]+1);
            } else if(i==n-1){
                if(nums[i]>=nums[i-1])
                    evenMoves+=(nums[i]-nums[i-1]+1);
            } else {
                if(nums[i]>=nums[i-1] || nums[i]>=nums[i+1]){
                    evenMoves+=(nums[i]-Math.min(nums[i-1], nums[i+1])+1);
                }
            }
        }
        
        for(int i=1;i<n;i+=2){
            if(i==n-1){
                if(nums[i]>=nums[i-1])
                    oddMoves+=(nums[i]-nums[i-1]+1);
            } else {
                if(nums[i]>=nums[i-1] || nums[i]>=nums[i+1]){
                    oddMoves+=(nums[i]-Math.min(nums[i-1], nums[i+1])+1);
                }
            }
        }
        
        return Math.min(evenMoves, oddMoves);
    }
}
