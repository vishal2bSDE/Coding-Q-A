Problem Link : https://www.geeksforgeeks.org/stack-set-2-infix-to-postfix/
----------------------------------------------------------------------------
Complexity : Time - O(len(exp)), Memory - O(len(exp))
----------------------------------------------------------------------------

public static String infixToPostfix(String exp) 
	{
		Stack<Character> st=new Stack();
		HashMap<Character, Integer> map=new HashMap();
		StringBuilder str=new StringBuilder("");
		int i=0;
		
		map.put('^', 3);
		map.put('*', 2); map.put('/', 2);
		map.put('+', 1); map.put('-', 1);
		
		while(i<exp.length()){
		    char ch=exp.charAt(i);
            
		    if (Character.isAlphabetic(ch)){
		        str.append(ch);
		        ++i;
		    } else if (ch==')' && st.peek()=='('){
		        st.pop();
		        ++i;
		    } else if(st.isEmpty() || st.peek()=='(' || ch=='(' ||
		    (ch!=')' && map.get(st.peek())<
                    map.get(ch))){
		        st.push(ch);
		        ++i;
		    } else {
		        str.append(st.pop());
		    }
		}//to scrap off the stack and append it to string
		while(!st.isEmpty())
		    str.append(st.pop());
		
		return str.toString();
	}
