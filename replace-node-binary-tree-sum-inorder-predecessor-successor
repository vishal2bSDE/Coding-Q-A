Problem Link : https://www.geeksforgeeks.org/replace-node-binary-tree-sum-inorder-predecessor-successor/
---------------------------------------------------------------------------------------------------------
Complexity : Time - O(len(root)), Memory - O(len(root))
---------------------------------------------------------------------------------------------------------

static class Node {
	int data;
	Node left, right;
}

public static modify(Node root){
  traverse(root);
}
private static void traverse(Node root){
    if(root==null)
      return;
    traverse(root.left);
    arr.add(root.data);
    traverse(root.right);
  }
  private static void sum(Node root){
    if(root==null)
      return;
    sum(root.left);
    root.data=get(i-1)+get(i+1);
    //As the next index will be next place in inline traversal
    ++i;
    sum(root.right);
  }
  private static int get(int i){
    if(i<0 || i>=arr.size())
      return 0;
    return arr.get(i);
  }
