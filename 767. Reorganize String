Problem Link : https://leetcode.com/problems/reorganize-string/
------------------------------------------------------------------
Complexity : Time-O(N^2), Memory-O(N), TimeTaken-2hr
------------------------------------------------------------------
Logic :
In this Qs we first cnt the freq of each char then for each char we see traverse
the string and check the adj element if they are not similar the insert or else if no
idx found return empty string.


class Solution {
    public String reorganizeString(String s) {
        HashMap<Character, Integer> map=new HashMap();
        char[] ch=s.toCharArray();
        for(char c:ch){
            map.put(c, map.getOrDefault(c, 0)+1);
        }
        StringBuilder res=new StringBuilder("");
        while(!map.isEmpty()){
            Iterator<Character> it=map.keySet().iterator();
            List<Character> empty=new ArrayList();
            while(it.hasNext()){
                char c=it.next();
                if(res.length()==0){
                    add(res, 0, 0, map, empty, c);
                    int i=0;
                    for(i=0;i<res.length();i++){
                        if(i==0 && get(i, res)!=c) {
                            add(res, i, 0, map, empty, c);
                            break;
                        }
                        else if(get(i, res)!=c && get(i+1, res)!=c){
                            add(res, i, 1, map, empty, c);
                            break;
                        }
                    }
                    if(i==res.length())return "";
                }
            }
            for(char c:empty){
                if(map.containsKey(c))map.remove(c);
            }
        }
        
        return res.toString();
    }
    private void add(StringBuilder res, int i, int add, Map<Character, Integer> map, List<Character> empty, char c){
        res.insert(i+add, c);
        map.put(c, map.get(c)-1);
        if(map.get(c)==0)
            empty.add(c);
    }
    private char get(int idx, StringBuilder str){
        if(idx<0 || idx>=str.length())return '-';
        return str.charAt(idx);
    }
}
