Problem Link : https://www.hackerearth.com/practice/basic-programming/bit-manipulation/basics-of-bit-manipulation/practice-problems/algorithm/pikachu-loves-or-0c02a270/
---------------------------------------------------------------------------------------------
Complexity : Time - O(N), Memory - O(N)
---------------------------------------------------------------------------------------------

Observe that ith bit in aj will be 1 before battle k if and only if, there is atleast one number in range [j-k,j] which has ith bit set.
So for each bit, we can keep the index where it appeared last time while traversing the array. If the index lies in required range, set the bit to 1.
---------------------------------------------------------------------------------------------

public static void main(String[] args) {
        Scanner in=new Scanner(System.in);
        int n=in.nextInt(), k=in.nextInt();
        int[] arr=new int[n];
        for(int i=0;i<n;i++)
            arr[i]=in.nextInt();
        int[] ans=new int[n], bits=new int[32];
        Arrays.fill(bits, Integer.MIN_VALUE);
        for(int i=0;i<n;i++){
            for(int j=0;j<30;j++){
                if((arr[i]&1)!=0)bits[j]=i;
                if(i<=k+bits[j])ans[i]|=(1<<j);
                arr[i]>>=1;
            }
        }
        // System.out.println(Arrays.toString(bits));
        for(int ele : ans)
            System.out.print(ele+" ");
        System.out.println();
        
    }
