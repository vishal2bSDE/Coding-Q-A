Problem Link : https://leetcode.com/problems/k-diff-pairs-in-an-array/
---------------------------------------------------------------------------
Complexity: Time-O(NlogN), Memory-O(N), TimeTaken-<30min
---------------------------------------------------------------------------
Logic:
Sort the array and then for each index try to find the other ele of the pair which
can result in |nums[i]-nums[j]|==k in log time.

class Solution {
    public int findPairs(int[] nums, int k) {
        if(nums.length<2)
            return 0;
        
        Set<Integer> set=new HashSet();
        int cnt=0;
        
        Arrays.sort(nums);
        for(int i=0;i<nums.length-1;i++){
            if(!left(nums, nums[i], k, i))
                continue;
            set.add(nums[i]);
        }
        return set.size();
    }
    private boolean left(int[] nums, int ele, int k, int i){
        int s=i+1;
        int e=nums.length-1;
        int index=-1;
        while(s<=e){
            int mid=(e+s)/2;
            int diff=nums[mid]-ele;
            if(diff==k)
                return true;
            if(diff>k)
                e=mid-1;
            else
                s=mid+1;
        }
        return false;
    }
}
